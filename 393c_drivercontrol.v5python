{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nRightDrive_9_10_motor_a = Motor(Ports.PORT20, GearSetting.RATIO_6_1, False)\nRightDrive_9_10_motor_b = Motor(Ports.PORT10, GearSetting.RATIO_6_1, False)\nRightDrive_9_10 = MotorGroup(RightDrive_9_10_motor_a, RightDrive_9_10_motor_b)\nLeftDrive_19_20_motor_a = Motor(Ports.PORT1, GearSetting.RATIO_6_1, True)\nLeftDrive_19_20_motor_b = Motor(Ports.PORT11, GearSetting.RATIO_6_1, True)\nLeftDrive_19_20 = MotorGroup(LeftDrive_19_20_motor_a, LeftDrive_19_20_motor_b)\nLeftDrive_Top_18 = Motor(Ports.PORT12, GearSetting.RATIO_6_1, False)\nRightDrive_Top_8 = Motor(Ports.PORT19, GearSetting.RATIO_6_1, True)\nCatapult = Motor(Ports.PORT5, GearSetting.RATIO_36_1, True)\ndigital_out_a = DigitalOut(brain.three_wire_port.a)\nmotor_group_13_motor_a = Motor(Ports.PORT13, GearSetting.RATIO_18_1, True)\nmotor_group_13_motor_b = Motor(Ports.PORT14, GearSetting.RATIO_18_1, False)\nmotor_group_13 = MotorGroup(motor_group_13_motor_a, motor_group_13_motor_b)\ncontroller_1 = Controller(PRIMARY)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\ndef ondriver_drivercontrol_0():\n    #Lightning McQueen Intake\n    motor_group_13.set_velocity(100, PERCENT)\n    while True:\n        #Arcade Movement\n        RightDrive_9_10.set_velocity((controller_1.axis3.position() - controller_1.axis1.position()), PERCENT)\n        LeftDrive_19_20.set_velocity((controller_1.axis3.position() + controller_1.axis1.position()), PERCENT)\n        LeftDrive_Top_18.set_velocity((controller_1.axis3.position() + controller_1.axis1.position()), PERCENT)\n        RightDrive_Top_8.set_velocity((controller_1.axis3.position() - controller_1.axis1.position()), PERCENT)\n        RightDrive_9_10.spin(FORWARD)\n        LeftDrive_19_20.spin(FORWARD)\n        LeftDrive_Top_18.spin(FORWARD)\n        RightDrive_Top_8.spin(FORWARD)\n        #Catapult Placeholder (NEEDS RATCHET AND DIFFERENT MODES)\n        if controller_1.buttonL2.pressing():\n            Catapult.spin(FORWARD)\n        else:\n            Catapult.stop()\n        #Intake/Outtake\n        if controller_1.buttonR2.pressing():\n            motor_group_13.spin(FORWARD)\n        elif controller_1.buttonR1.pressing():\n            motor_group_13.spin(REVERSE)\n        else:\n            motor_group_13.stop()\n\n\n# create a function for handling the starting and stopping of all autonomous tasks\ndef vexcode_auton_function():\n    # Start the autonomous control tasks\n    # wait for the driver control period to end\n    while( competition.is_autonomous() and competition.is_enabled() ):\n        # wait 10 milliseconds before checking again\n        wait( 10, MSEC )\n    # Stop the autonomous control tasks\n\ndef vexcode_driver_function():\n    # Start the driver control tasks\n    driver_control_task_0 = Thread( ondriver_drivercontrol_0 )\n\n    # wait for the driver control period to end\n    while( competition.is_driver_control() and competition.is_enabled() ):\n        # wait 10 milliseconds before checking again\n        wait( 10, MSEC )\n    # Stop the driver control tasks\n    driver_control_task_0.stop()\n\n\n# register the competition functions\ncompetition = Competition( vexcode_driver_function, vexcode_auton_function )\n\n# add 15ms delay to make sure events are registered correctly.\nwait(15, MSEC)\n","textLanguage":"python","rconfig":[{"port":[20,10],"name":"RightDrive_9_10","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio6_1","motor_a_reversed":"false","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[1,11],"name":"LeftDrive_19_20","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio6_1","motor_a_reversed":"true","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[12],"name":"LeftDrive_Top_18","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[19],"name":"RightDrive_Top_8","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[5],"name":"Catapult","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio36_1"},"triportSourcePort":22},{"port":[1],"name":"digital_out_a","customName":false,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{"id":"partner"},"triportSourcePort":22},{"port":[13,14],"name":"motor_group_13","customName":false,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"}}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.3","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}